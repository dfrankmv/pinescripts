// This Pine Scriptâ„¢ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© dfrankmv

//@version=5
strategy("INF_TRAILING_5", overlay=true, margin_long=100, margin_short=100, process_orders_on_close = true, max_labels_count = 500)

import dfrankmv/HelpersLib/1 as h
import dfrankmv/TrailingLib/9 as t
import dfrankmv/AlgoTpWinLib/2 as a

// ********************************************************************************************************************* INPUT 
var TAG             = input.string("2024/05/05 14:54 ARB", "TAG")
var INITIAL_CAPITAL = input.float(10000, "INITIAL_CAPITAL")
var ORDER_AMT       = input.float(10.0, "ORDER_AMT")
var TP_DIST         = input.float(0.5, "TP_DIST")
var WIN_DIST        = input.float(5.0, "WIN_DIST")
var TRAILING_DIST   = input.float(2.0, "TRAILING_DISTANCE")
var ORDER_FACTOR    = input.float(2.0, "ORDER_FACTOR")
var DIST_INCREMENT  = input.float(0.5, "DIST_INCREMENT")
var MODE            = input.string("NORMAL", "MODE", ["NORMAL", "REVERSE"])
var RAW             = input.text_area("2024/05/05 14:54 ARB", "RAW")
var FROM            = h.parse_raw(RAW, "UTC+2")

// ********************************************************************************************************************* CONSTANTS 
var SIDE_LONG  = 0
var SIDE_SHORT = 1

var STATUS_NEW = 0
var STATUS_PIP = 1  // POSITION IN PROGRESS
var STATUS_LCK = -1 // LOCKED
var STATUS_TIP = 3  // TRAILING IN PROGRESS 
var STATUS_TTG = 4  // TRAILING TRIGGERED

var MODE_NORMAL  = 0 // TRAILING MODE NORMAL 
var MODE_REVERSE = 1 // TRAILING MODE REVERSE 

var COLOR_LONG_OPEN         = color.rgb(22, 212, 181)
var COLOR_LONG_CLOSE        = color.rgb(89, 13, 124)
var COLOR_LONG_AVG          = #0ae2ff
var COLOR_LONG_TRAILING     = color.rgb(0, 255, 0, 63)
var COLOR_SHORT             = #ff0000
var COLOR_SHORT_OPEN        = #fd6b6b
var COLOR_SHORT_CLOSE       = #7a1919 
var COLOR_SHORT_AVG         = #f09d22
var COLOR_SHORT_TRAILING    = #ff0000aa

// ********************************************************************************************************************* EQUITY
var cash = INITIAL_CAPITAL
var equity = INITIAL_CAPITAL

trade_signal(a.Algo algo, t.Trailing tr) => 
    ret = true 
    ret := ret and algo.is_not_locked()
    ret := ret and algo.is_bar_available()
    ret := ret and tr.trigger_crossed()
    ret

pre_trade(a.Algo algo) =>
    algo.order_amt := algo.nof_orders == 0 ? algo.ORDER_AMT : algo.order_amt * ORDER_FACTOR

post_trade(a.Algo algo, t.Trailing tr) =>
    tr.distance := (algo.nof_orders <= 1) ? tr.DISTANCE : tr.add_distance(DIST_INCREMENT)

process(a.Algo algo, t.Trailing tr) =>
    tr.run()
    algo.pre_process()
    if algo.is_bar_used()
        algo.order_amt /= ORDER_FACTOR
        tr.decrease_distance(DIST_INCREMENT)
    if trade_signal(algo, tr)
        pre_trade(algo)
        algo.trade(amt=algo.order_amt, trade_id="o" + str.tostring(algo.nof_orders + 1))
        post_trade(algo, tr)
    0

// ********************************************************************************************************************* PROCESS
var _MODE = MODE == "NORMAL" ? MODE_NORMAL : MODE_REVERSE

var t.Trailing tr = t.create(SIDE_LONG, TRAILING_DIST, _MODE)
var a.Algo long  = a.create(STATUS_NEW, SIDE_LONG, ORDER_AMT, 0.0, TP_DIST, WIN_DIST, FROM)


if FROM <= time("")
    process(long, tr)

if long.win_amt > 0.0 
    cash += long.win_amt
    long.win_amt := 0.0

equity := cash + long.unrealized()


plot(bar_index, "bar_index", display=display.data_window)

plot(display=display.status_line, color=color.yellow, series=equity, title="equity")
plot(display=display.status_line, color=color.orange, series=strategy.equity, title="strategy.equity")
plot(display=display.status_line, color=color.red,    series=INITIAL_CAPITAL - ta.min(equity), title="min_equity")
plot(display=display.status_line, color=color.green,  series=ta.max(equity) - INITIAL_CAPITAL, title="max_equity")

plot(display=display.data_window, color=color.green, series=long.status, title="status")
plot(display=display.data_window, color=color.green, series=long.nof_orders, title="nof_orders")
plot(display=display.data_window, color=color.green, series=long.total_amt, title="total_amt")
plot(display=display.data_window, color=color.green, series=long.total_qty, title="total_qty")
plot(display=display.data_window, color=color.green, series=tr.status, title="trailing_status")
plot(display=display.data_window, color=color.green, series=tr.edge_price, title="edge_price")
plot(display=display.data_window, color=color.green, series=tr.trigger_price, title="trigger_price")
plot(display=display.data_window, color=color.green, series=long.win_price, title="win_price")
plot(display=display.data_window, color=color.green, series=long.avg_price, title="avg_price")

plot(display=display.pane, color=tr.COLOR_LONG_TRAILING, style=plot.style_linebr, series=tr.trigger_price, title="trigger_price")
plot(display=display.pane, color=COLOR_LONG_AVG, style=plot.style_linebr, series=long.avg_price, title="avg_price", linewidth=2)

plotshape(location=location.absolute, size=size.small, display=display.pane, offset=0, style=shape.labelup,   color=COLOR_LONG_OPEN,   series=long.order_history)
plotshape(location=location.absolute, size=size.small, display=display.pane, offset=0, style=shape.labeldown, color=COLOR_LONG_CLOSE,  series=long.tp_history, text="ðŸ¥³")
plotshape(location=location.absolute, size=size.small, display=display.pane, offset=0, style=shape.labeldown, color=color.yellow,  series=long.win_history, text="ðŸš€")